#!/usr/bin/env zsh
# 
# zsh -c "$(curl -fsSL https://nozomiishii.dev/dotfiles/install)"
# -c: Take the first argument as a command to execute
# -f (--fail): Quit silently when a server error occurs.
# -s (--silent): Silent mode. Don't show progress meter or error messages. Makes Curl mute.
# -S (--show-error): Show error message if it fails.
# -L (--location): Enable redirection.
# 
# curl -o - https://raw.githubusercontent.com/nozomiishii/dotfiles/main/install | zsh
set -e


ROOT_PATH="$HOME/dotfiles"
MODULES_PATH="$ROOT_PATH/modules"


usage(){
cat <<EOF


NAME
    ./install - Install Nozomi's favourite mac setups.


USAGE:
    ./install [OPTIONS]


OPTIONS:
    -a,   --apps          🧝🏻‍♀️ Apps setup
    -b,   --homebrew      🍺 Homebrew setup
    -c,   --code          🦄 Clone repositories
    -d,   --drive         🌎 Sync with google drive
    -e,   --environment   🌝 Environment setup(asdf)
    -h,   --help          💡 Print this usage
    -k,   --sshkey        🔐 Generate ssh key
    -l,   --symlink       🗂 Symbolic link
    -m,   --macos         💻 MacOS setup
    -u=*, --unlink=*      👋 Unlinking Symbolic links...



EOF
}


pre_sudo(){
  # Ask for the administrator password upfront
  sudo -v
  # Temporarily increasing sudo's timeout until the process has finished
  while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
}


# Homebrew
setup_homebrew(){
  echo "🍺 Homebrew setup"
  pre_sudo
  source "$ROOT_PATH/src/homebrew.zsh"
}


# MacOS
# Dependencis | Homebrew
setup_macos(){
  echo "💻 MacOS setup"
  pre_sudo
  source "$ROOT_PATH/src/macos.zsh"
}

# Link
# Dependencis | Homebrew
link_modules(){
  echo "🗂 Symbolic link"
  stow -vd "$MODULES_PATH" -t ~ $(ls $MODULES_PATH)
}


# Unlink
# Dependencis | Homebrew
unlink_modules(){
  echo "👋 Unlinking symbolic links..."
  stow -vD -d "$MODULES_PATH" -t ~ "$MODULES"
  exit
}


# Apps
# Dependencis | Homebrew | Link
setup_apps(){
  echo "🧝🏻‍♀️ Apps setup"
  source "$ROOT_PATH/src/apps.zsh"
}


# Environment
# Dependencis | Homebrew | Link
setup_environment(){
  echo "🌝 Environment setup(asdf)"
  source "$ROOT_PATH/src/env.zsh"
}



# Code
# Dependencis | Homebrew
setup_repositoris(){
  echo "🦄 Clone repositories"
  source "$ROOT_PATH/src/code.zsh"
}


# SSHkey
# Dependencis | Homebrew
generate_sshkey(){
  echo "🔐 Generate ssh key"
  source "$ROOT_PATH/src/sshkey.zsh"
}


# Drive
# Dependencis | Homebrew, Mirror Google Drive files
sync_with_drive(){
  echo "🌎 Sync with google drive"
  source "$ROOT_PATH/src/drive.zsh"
}


agree_license(){
osascript <<EOD
  tell application "System Events"
      tell process "Install Command Line Developer Tools"
          keystroke return
          click button "Agree" of window "License Agreement"
      end tell
  end tell
EOD
}


if [ ! $@ ]; then
  echo "\n 👨🏻‍🚀 Install the best Mac setup for you!! \n"
  pre_sudo

  if [ ! -d /Applications/Xcode.app/Contents/Developer ]; then
    # https://gist.github.com/brysgo/9007731
    echo "👨🏻‍🚀 Install xcode-select..."
    sudo xcode-select --install &> /dev/null
    sleep 1
    agree_license
  fi

  cd $HOME
  if [ ! -d $HOME/dotfiles ]; then
    echo "👨🏻‍🚀 Clone nozomiishii/dotfiles..."
    git clone https://github.com/nozomiishii/dotfiles.git
  fi

  chmod +x $HOME/dotfiles/install
  chmod +x $HOME/dotfiles/src/*
  setup_homebrew
  setup_macos
  setup_apps
  setup_environment

  echo "👨🏻‍🚀 Open the apps that needs to be configured"
  open -b com.apple.systempreferences
  open "/Applications/Slack.app"
  open "/Applications/TablePlus.app"
  open "/Applications/ColorSnapper2.app"
  open "/Applications/Hazel.app"
  open "/Applications/Visual Studio Code.app"
  open "/Applications/Alfred 4.app"
  open "/Applications/Google Chrome.app"
  open "/Applications/1Password 7.app"
  open "/Applications/Karabiner-Elements.app"
  open https://github.com/nozomiishii/dotfiles


  echo "👨🏻‍🚀 Don't forget to reboot your Mac after setting up the app! \n"
  echo '"sudo reboot" \n'
  echo "🎉 The dotfiles installation is complete \n\n"
fi
for i in "$@"; do
  case "$i" in
    -a|--apps)
      setup_apps
      shift ;;
    -b|--homebrew)
      setup_homebrew
      shift ;;
    -c|--code)
      setup_repositoris
      shift ;;
    -d|--drive )
      sync_with_drive
      shift ;;
    -e|--environment)
      setup_environment
      shift ;;
    -h|--help)
      usage
      shift ;;
    -k|--sshkey)
      generate_sshkey
      shift ;;
    -l|--symlink)
      link_modules
      shift ;;
    -m|--macos)
      setup_macos
      shift ;;
    -u=*|--unlink=*)
      MODULES="${i#*=}"
      unlink_modules
      shift ;;
    *)
      usage
      shift ;;
  esac
done
