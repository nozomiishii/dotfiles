#!/usr/bin/env zsh
# 
# zsh -c "$(curl -fsSL https://nozomiishii.dev/dotfiles/install)"
# -c: Take the first argument as a command to execute
# -f (--fail): Quit silently when a server error occurs.
# -s (--silent): Silent mode. Don't show progress meter or error messages. Makes Curl mute.
# -S (--show-error): Show error message if it fails.
# -L (--location): Enable redirection.
# 
# curl -o - https://raw.githubusercontent.com/nozomiishii/dotfiles/main/install | zsh
set -e


ROOT_PATH="$HOME/dotfiles"
MODULES_PATH="$ROOT_PATH/modules"


usage(){
cat <<EOF


NAME
    ./install - Install Nozomi's favourite mac setups.


USAGE:
    ./install [OPTIONS]


OPTIONS:
    -a,    --apps          🧝🏻‍♀️ Apps setup
    -b,    --homebrew      🍺 Homebrew setup
    -c,    --code          🦄 Clone repositories
    -d,    --drive         🌎 Sync with google drive
    -e,    --environment   🌝 Environment setup(asdf)
    -h,    --help          💡 Print this usage
    -k,    --sshkey        🔐 Generate ssh key
    -l,    --symlink       🗂 Symbolic link
    -m,    --macos         💻 MacOS setup
    -ul=*, --unlink=*      👋 Unlinking Symbolic links
    -up,   --upgrade       🚀 Upgrading dotfiles



EOF
}


pre_sudo(){
  # Ask for the administrator password upfront
  sudo -v
  # Temporarily increasing sudo's timeout until the process has finished
  while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
}


upgrade(){
  echo "🚀 Upgrading dotfiles"
  cd $ROOT_PATH
  git pull origin main
  echo "\n🚀 Dotfiles upgrade is complete \n\n"
  cd -
}


# Homebrew
setup_homebrew(){
  echo "🍺 Homebrew setup"
  pre_sudo
  source "$ROOT_PATH/src/homebrew.zsh"
}


# MacOS
# Dependencis | Homebrew
setup_macos(){
  echo "💻 MacOS setup"
  pre_sudo
  source "$ROOT_PATH/src/macos.zsh"
}

# Link
# Dependencis | Homebrew
link_modules(){
  echo "🗂 Symbolic link"
  stow -vd "$MODULES_PATH" -t ~ $(ls $MODULES_PATH)
}


# Unlink
# Dependencis | Homebrew
unlink_modules(){
  echo "👋 Unlinking symbolic links"
  stow -vD -d "$MODULES_PATH" -t ~ "$MODULES"
  exit
}


# Apps
# Dependencis | Homebrew | Link
setup_apps(){
  echo "🧝🏻‍♀️ Apps setup"
  source "$ROOT_PATH/src/apps.zsh"
}


# Environment
# Dependencis | Homebrew | Link | Apps (agree to the Xcode license)
setup_environment(){
  echo "🌝 Environment setup(asdf)"
  source "$ROOT_PATH/src/env.zsh"
}


# Code
# Dependencis | Homebrew
setup_repositoris(){
  echo "🦄 Clone repositories"
  source "$ROOT_PATH/src/code.zsh"
}


# SSHkey
# Dependencis | Homebrew
generate_sshkey(){
  echo "🔐 Generate ssh key"
  source "$ROOT_PATH/src/sshkey.zsh"
}


# Drive
# Dependencis | Homebrew, Mirror Google Drive files
sync_with_drive(){
  echo "🌎 Sync with google drive"
  source "$ROOT_PATH/src/drive.zsh"
}


if [ ! $@ ]; then
  echo "\n👨🏻‍🚀 Install the best Mac setup for you!! \n"

  if [[ ! -d /Applications/Xcode.app/Contents/Developer && ! -d /Library/Developer/CommandLineTools ]]; then
    echo "👨🏻‍🚀 Ooops! you need to install xcode-select"
    echo "\n xcode-select --install \n"
    xcode-select --install
    echo "\n👨🏻‍🚀 The installation pop-up will appear\n\n"
    exit
  fi

  pre_sudo
  cd $HOME
  if [ -d /Applications/Xcode.app ]; then
    sudo xcodebuild -license accept
  fi
  if [ ! -d $HOME/dotfiles ]; then
    echo "👨🏻‍🚀 Clone nozomiishii/dotfiles..."
    git clone https://github.com/nozomiishii/dotfiles.git
    cd $HOME/dotfiles
    git remote set-url origin git@github.com:nozomiishii/dotfiles.git
    cd $HOME
  fi

  # Turn display off after: Never
  sudo pmset -c displaysleep 0
  # Prevent your mac from sleeping automatically when the display is off
  sudo pmset -c sleep 0

  
  chmod +x $HOME/dotfiles/install
  chmod +x $HOME/dotfiles/src/*


  setup_homebrew
  setup_macos
  link_modules


  echo "👨🏻‍🚀 Open the apps that needs to be configured"
  open -b com.apple.systempreferences
  open "/Applications/Slack.app"
  open "/Applications/TablePlus.app"
  open "/Applications/ColorSnapper2.app"
  open "/Applications/Hazel.app"
  open "/Applications/DeepL.app"
  open "/Applications/Alfred 4.app"
  open "/Applications/Google Chrome.app"
  open "/Applications/1Password 7.app"
  open "/Applications/Karabiner-Elements.app"
  open /users
  open https://github.com/nozomiishii/dotfiles


  setup_apps
  setup_environment


  echo "🎉 The dotfiles installation is complete \n\n"
  # Turn display off after: 15 mins
  sudo pmset -c displaysleep 15
  # Bootstrap yabai and skhd
  brew services start --all


  echo "👨🏻‍🚀 Restart the mac after 10 seconds! \n"
  for i in {10..0}; do echo $i; sleep 1; done
  echo "👨🏻‍🚀 Restart! \n"
  sleep 2
  sudo reboot
fi

for i in "$@"; do
  case "$i" in
    -a|--apps)
      setup_apps
      shift ;;
    -b|--homebrew)
      setup_homebrew
      shift ;;
    -c|--code)
      setup_repositoris
      shift ;;
    -d|--drive )
      sync_with_drive
      shift ;;
    -e|--environment)
      setup_environment
      shift ;;
    -h|--help)
      usage
      shift ;;
    -k|--sshkey)
      generate_sshkey
      shift ;;
    -l|--symlink)
      link_modules
      shift ;;
    -m|--macos)
      setup_macos
      shift ;;
    -ul=*|--unlink=*)
      MODULES="${i#*=}"
      unlink_modules
      shift ;;
    -up|--upgrade)
      upgrade
      shift ;;
    *)
      usage
      shift ;;
  esac
done
