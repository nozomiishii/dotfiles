name: Shell Script Quality Checks

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '**/*.sh'
      - '**/*.bats'
      - '.github/workflows/shell-script-quality-checks.yaml'
  pull_request:
    paths:
      - '**/*.sh'
      - '**/*.bats'
      - '.github/workflows/shell-script-quality-checks.yaml'

defaults:
  run:
    shell: bash

jobs:
  format:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Get code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Setup Go - ubuntu-latest
        if: ${{ matrix.os == 'ubuntu-latest'}}
        uses: actions/setup-go@v4
        with:
          go-version: 'stable'

      - name: Install Dependencies - ubuntu-latest
        if: ${{ matrix.os == 'ubuntu-latest'}}
        run: go install mvdan.cc/sh/v3/cmd/shfmt@latest

      - name: Install Dependencies - macos-latest
        if: ${{ matrix.os == 'macos-latest'}}
        run: brew install shfmt

      - name: Format Check
        run: shfmt --diff --indent 2 --binary-next-line --case-indent --space-redirects **/*.sh

      - name: Tips
        if: failure()
        run: |
          echo "Format check failed. To fix, you need to install and run 'shfmt'"
          echo "Use these commands:"
          echo ''
          echo "brew install shfmt"
          echo "shfmt --write --indent 2 --binary-next-line --case-indent --space-redirects **/*.sh"
          echo ''
          echo "More on shfmt: https://github.com/mvdan/sh"
          echo "Editor extensions for shfmt: https://github.com/mvdan/sh#related-projects"

  lint:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Get code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Install Dependencies - ubuntu-latest
        if: ${{ matrix.os == 'ubuntu-latest'}}
        run: |
          sudo apt-get update -y
          sudo apt-get install -y shellcheck

      - name: Install Dependencies - macos-latest
        if: ${{ matrix.os == 'macos-latest'}}
        run: brew install shellcheck

      - name: Lint
        run: shellcheck --external-sources --exclude=SC1091 **/*.sh

      - name: Tips
        if: failure()
        run: |
          echo "Lint failed. To fix, you need to install and run 'shellcheck'"
          echo "Use these commands:"
          echo ''
          echo "brew install shellcheck"
          echo "shellcheck --external-sources --exclude=SC1091 **/*.sh"
          echo ''
          echo "More on shellcheck: https://github.com/koalaman/shellcheck"
          echo "Editor extensions for shellcheck: https://github.com/koalaman/shellcheck#in-your-editor"

  test:
    strategy:
      matrix:
        # FIXME: ubuntu-latestのときだけunbound variableってなってTest落ちる
        # os: [macos-latest, ubuntu-latest]
        os: [macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Get code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.18.0

      - name: Install Dependencies
        run: npm install -g bats

      - name: Test
        run: bats ./utils/**

      - name: Tips
        if: failure()
        run: |
          echo "Lint failed. To fix, you need to install and run 'bats'"
          echo "Use these commands:"
          echo ''
          echo "brew install bats-core"
          echo "bats ./utils/**"
          echo ''
          echo "More on bats: https://github.com/bats-core/bats-core"
          echo "VSCode extensions for bats: https://github.com/jetmartin/bats"
