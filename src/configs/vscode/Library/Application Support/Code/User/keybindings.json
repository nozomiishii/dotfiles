[
  // ----------------------------------------------------------------
  // Development
  // ----------------------------------------------------------------
  {
    "key": "ctrl+space",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+space",
    "command": "-toggleSuggestionDetails",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "-cursorDown",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+[",
    "command": "workbench.action.navigateBack"
  },
  {
    "key": "ctrl+]",
    "command": "workbench.action.navigateForward"
  },

  // ----------------------------------------------------------------
  // Window
  // ----------------------------------------------------------------
  {
    "key": "alt+cmd+w",
    "command": "workbench.action.closeEditorsInGroup"
  },
  {
    "key": "shift+cmd+r",
    "command": "-reactSnippets.search",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+r",
    "command": "workbench.action.reloadWindow"
  },

  // ----------------------------------------------------------------
  // Explorer
  // ----------------------------------------------------------------
  {
    "key": "cmd+n",
    "command": "explorer.newFile"
  },
  {
    "key": "cmd+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "shift+cmd+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },

  // ----------------------------------------------------------------
  // Editor
  // ----------------------------------------------------------------
  {
    "key": "shift+cmd+\\",
    "command": "workbench.action.splitEditorDown",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditor",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor",
    "when": "textInputFocus"
  },

  // ----------------------------------------------------------------
  // Terminal
  // ----------------------------------------------------------------
  {
    "key": "alt+cmd+j",
    "command": "workbench.action.terminal.openNativeConsole"
  },
  {
    "key": "shift+cmd+j",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "shift+cmd+j",
    "command": "workbench.action.terminal.new",
    "when": "!terminal.active"
  },
  {
    "key": "alt+j",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "terminal.active"
  },
  {
    "key": "alt+cmd+i",
    "command": "workbench.action.terminal.moveToEditor",
    "when": "terminal.active"
  },
  {
    "key": "alt+i",
    "command": "workbench.action.terminal.moveToTerminalPanel"
  },
  {
    "key": "cmd+k",
    "command": "workbench.action.terminal.clear",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "cmd+t",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "cmd+right",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+left",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },

  // Resize
  {
    "key": "alt+up",
    "command": "workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+down",
    "command": "workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },

  // Change the focused index
  {
    "key": "cmd+1",
    "command": "workbench.action.terminal.focusAtIndex1",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+2",
    "command": "workbench.action.terminal.focusAtIndex2",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+3",
    "command": "workbench.action.terminal.focusAtIndex3",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+4",
    "command": "workbench.action.terminal.focusAtIndex4",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+5",
    "command": "workbench.action.terminal.focusAtIndex5",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+6",
    "command": "workbench.action.terminal.focusAtIndex6",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+7",
    "command": "workbench.action.terminal.focusAtIndex7",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+8",
    "command": "workbench.action.terminal.focusAtIndex8",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+9",
    "command": "workbench.action.terminal.focusAtIndex9",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },

  // ----------------------------------------------------------------
  // Git
  // ----------------------------------------------------------------
  {
    "key": "ctrl+cmd+a",
    "command": "git.stageSelectedRanges",
    "when": "isInDiffEditor"
  },

  // ----------------------------------------------------------------
  // Open Markdown preview
  // ----------------------------------------------------------------
  {
    "key": "alt+cmd+o",
    "command": "markdown.showPreviewToSide",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },

  // ----------------------------------------------------------------
  // Extensions
  // ----------------------------------------------------------------
  {
    "key": "ctrl+,",
    "command": "editor.emmet.action.wrapWithAbbreviation"
  },

  // ----------------------------------------------------------------
  // Github Copilot
  // ----------------------------------------------------------------
  {
    "key": "cmd+enter",
    "command": "inlineChat.accept",
    "when": "inlineChatFocused && inlineChatHasProvider && inlineChatVisible && !inlineChatEmpty"
  },
  {
    "key": "enter",
    "command": "-inlineChat.accept",
    "when": "inlineChatFocused && inlineChatHasProvider && inlineChatVisible && !inlineChatEmpty"
  },
  {
    "key": "cmd+enter",
    "command": "workbench.action.chat.acceptInput",
    "when": "inChatInput && textInputFocus"
  },
  {
    "key": "enter",
    "command": "-workbench.action.chat.acceptInput",
    "when": "inChatInput && textInputFocus"
  },

  // ----------------------------------------------------------------
  // User Snippets
  // ----------------------------------------------------------------
  {
    "key": "ctrl+c",
    "command": "editor.action.insertSnippet",
    "args": { "name": "pretty console log" },
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+c",
    "command": "editor.action.insertSnippet",
    "args": { "name": "pretty console check" },
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+k j",
    "command": "code-runner.run",
    "when": "!terminalFocus && editorTextFocus && !editorReadonly"
  }
]
