{
  // General
  "workbench.colorTheme": "Monokai Pro",
  "workbench.startupEditor": "newUntitledFile",
  "breadcrumbs.enabled": true,
  "files.insertFinalNewline": true,
  "diffEditor.ignoreTrimWhitespace": false,
  "security.workspace.trust.untrustedFiles": "open",
  "search.exclude": {
    "**/node_modules": true
  },

  // Editor
  "editor.tabSize": 2,
  "editor.wordWrap": "on",
  "editor.fontSize": 14,
  "editor.inlayHints.fontSize": 12,
  // "editor.inlayHints.padding": true,
  "editor.minimap.enabled": false,
  "editor.suggestSelection": "first",
  "editor.renderWhitespace": "trailing",
  "editor.acceptSuggestionOnEnter": "smart",
  "editor.accessibilitySupport": "off",
  "editor.acceptSuggestionOnCommitCharacter": false,
  "editor.guides.bracketPairs": true,
  "editor.bracketPairColorization.enabled": false,
  "editor.fontFamily": "Monaco, 'Courier New', monospace, 'Apple Color Emoji'",
  "editor.unicodeHighlight.invisibleCharacters": false,
  "editor.linkedEditing": true,

  // Emmet
  "emmet.triggerExpansionOnTab": true,
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "typescript": "typescriptreact"
  },

  // vscode-icons
  "workbench.iconTheme": "vscode-icons",
  "vsicons.associations.files": [
    {
      "icon": "docker",
      "extensions": ["docker-compose.dev.yml", "docker-compose.dev.yaml"],
      "filename": true,
      "format": "svg"
    }
  ],

  // NeoVim
  "vscode-neovim.neovimExecutablePaths.darwin": "/usr/local/bin/nvim",
  "vscode-neovim.neovimInitVimPaths.darwin": "$HOME/.config/nvim/init.vim",

  // Terminal
  "terminal.integrated.fontSize": 14,
  "terminal.integrated.fontFamily": "'MesloLGS Nerd Font Mono', Monaco, 'Courier New', monospace, 'Apple Color Emoji'",
  "workbench.colorCustomizations": {
    "panel.background": "#121112",
    "terminal.foreground": "#bbbbbb",
    "terminal.background": "#121112",
    "terminal.ansiBlack": "#121112",
    "terminal.ansiBlue": "#0000bb",
    "terminal.ansiCyan": "#00bbbb",
    "terminal.ansiGreen": "#00bb00",
    "terminal.ansiMagenta": "#bb00bb",
    "terminal.ansiRed": "#bb0000",
    "terminal.ansiWhite": "#bbbbbb",
    "terminal.ansiYellow": "#bbbb00",
    "terminal.ansiBrightBlack": "#555555",
    "terminal.ansiBrightBlue": "#5555ff",
    "terminal.ansiBrightCyan": "#55ffff",
    "terminal.ansiBrightGreen": "#55ff55",
    "terminal.ansiBrightMagenta": "#ff55ff",
    "terminal.ansiBrightRed": "#ff5555",
    "terminal.ansiBrightWhite": "#ffffff",
    "terminal.ansiBrightYellow": "#ffff55",
    "terminal.selectionBackground": "#b5d5ff",
    "terminalCursor.foreground": "#bbbbbb",

    // Git Copilot colors
    // "editorGhostText.border": "#403E41",
    // "editorGhostText.background": "#403E41",
    // "editorGhostText.foreground": "#C1C0C0"
    // "editorGhostText.border": "#727072",
    // "editorGhostText.background": "#727072",
    // "editorGhostText.foreground": "#FFD64C"

    "editorInlayHint.background": "#2D2A2E",
    "editorInlayHint.foreground": "#727072"
  },
  // Git Copilot
  "editor.inlineSuggest.enabled": false,

  // Explorer
  "explorer.openEditors.visible": 0,
  "explorer.compactFolders": false,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,

  // File associations
  "files.associations": {
    "install": "shellscript",
    ".lintstagedrc": "json",
    "*.strings": "plist",
    "*.plist": "plist",
    "vimrc": "viml",
    ".skhdrc": "shellscript",
    ".yabairc": "shellscript",
    ".tmux.conf": "shellscript",
    ".tool-versions": "properties",
    "config": "properties",
    "*.ejs": "html",
    "*.ejs.t": "html",
    "LICENSE": "plaintext"
  },

  // Extenstions
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "vsicons.dontShowNewVersionMessage": true,
  "liveServer.settings.donotShowInfoMsg": true,
  "gitlens.currentLine.enabled": false,
  "tabnine.experimentalAutoImports": true,
  "liveshare.presence": false,
  "errorLens.enabledDiagnosticLevels": ["error", "warning"],

  // Git
  "git.enabled": true,
  "git.path": "/opt/homebrew/bin/git",

  // Docker
  "docker.enableDockerComposeLanguageService": true,
  "vs-kubernetes": {
    "vscode-kubernetes.minikube-path.mac": "/Users/nozomiishii/.vs-kubernetes/tools/minikube/darwin-arm64/minikube",
    "vscode-kubernetes.kubectl-path.mac": "/Users/nozomiishii/.vs-kubernetes/tools/kubectl/kubectl"
  },

  // Terraform
  "terraform-ls.experimentalFeatures": {
    "validateOnSave": true
  },
  "[terraform]": {
    "editor.defaultFormatter": "hashicorp.terraform",
    "editor.formatOnSave": true
  },

  // Prisma
  "[prisma]": {
    "editor.defaultFormatter": "Prisma.prisma"
  },

  // Tailwindcss
  "stylelint.config": {
    "rules": {
      "at-rule-no-unknown": [
        true,
        {
          "ignoreAtRules": [
            "tailwind",
            "apply",
            "variants",
            "responsive",
            "screen",
            "layer"
          ]
        }
      ],
      "declaration-block-trailing-semicolon": null,
      "no-descending-specificity": null
    }
  },
  "css.validate": false,
  "less.validate": false,
  "scss.validate": false,
  "tailwindCSS.emmetCompletions": true,
  "editor.quickSuggestions": {
    "strings": true
  },

  // Shell
  "[shellscript]": {
    "editor.codeActionsOnSave": {
      "source.fixAll.shellcheck": true
    }
  },
  "shellcheck.ignorePatterns": {
    "**/*.xonshrc": true,
    "**/*.xsh": true,
    "**/*.zsh": true,
    "**/*.zshrc": true,
    "**/zshrc": true,
    "**/*.zprofile": true,
    "**/zprofile": true,
    "**/*.zlogin": true,
    "**/zlogin": true,
    "**/*.zlogout": true,
    "**/zlogout": true,
    "**/*.zshenv": true,
    "**/zshenv": true,
    "**/*.zsh-theme": true
  },

  // C#
  "omnisharp.useGlobalMono": "always",
  "omnisharp.monoPath": "/Library/Frameworks/Mono.framework/Versions/Current",
  "[csharp]": {
    "editor.defaultFormatter": "ms-dotnettools.csharp"
  },

  // Golang
  "[go]": {
    "editor.defaultFormatter": "golang.go"
  },

  // Rust
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer"
  },
  "rust-analyzer.checkOnSave.command": "clippy",

  // JavaScript
  "javascript.inlayHints.parameterNames.enabled": "all",
  // "javascript.inlayHints.variableTypes.enabled": true,
  // "javascript.inlayHints.parameterTypes.enabled": true,
  // "javascript.inlayHints.functionLikeReturnTypes.enabled": true,

  // TypeScript
  "typescript.inlayHints.parameterNames.enabled": "all",
  // "typescript.inlayHints.variableTypes.enabled": true,
  // "typescript.inlayHints.parameterTypes.enabled": true,
  // "typescript.inlayHints.functionLikeReturnTypes.enabled": true,

  // Prettier
  "files.autoSave": "onFocusChange",
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.formatOnSave": true,
  "prettier.requireConfig": true,

  // ESlint
  "eslint.enable": true,
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact"
    // "json",
    // "jsonc",
    // "json5",
    // "yaml",
    // "toml"
  ],

  // Lint
  "editor.codeActionsOnSave": {
    "source.addMissingImports": true,
    "source.fixAll.eslint": true,
    "source.fixAll.markdownlint": true
  },

  // Markdown
  "markdown-preview-github-styles.colorTheme": "dark",
  "markdown.extension.toc.updateOnSave": false,

  // yaml
  "[yaml]": {
    "editor.insertSpaces": true,
    "editor.tabSize": 2
  },
  "redhat.telemetry.enabled": true,

  // Solidity
  "solidity.compileUsingRemoteVersion": "latest",
  "[solidity]": {
    "editor.defaultFormatter": "JuanBlanco.solidity"
  },

  // fig
  "terminal.integrated.env.osx": {
    "FIG_NEW_SESSION": "1"
  },

  // Spell Checker
  "cSpell.userWords": [
    "Behaviour",
    "chmod",
    "craco",
    "dotbot",
    "Dotfiles",
    "eieio",
    "firestore",
    "fullscreen",
    "gsap",
    "iphone",
    "ishii",
    "Karabiner",
    "Kotoeri",
    "macbook",
    "mkdir",
    "Monokai",
    "Neumorphism",
    "nozomi",
    "Nozomi's",
    "nozomiishii",
    "Numpad",
    "NVRAM",
    "pbcopy",
    "Powerpack",
    "reduxjs",
    "tailwindcss",
    "testid",
    "typesync",
    "Unpair",
    "wireframe"
  ]
}
